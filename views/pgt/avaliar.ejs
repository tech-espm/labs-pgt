<h5 id="subtitulo"> Relatório de <%-((item.idfase === 1) ? 'Qualificação' : 'Defesa' ) %> - <span style="color:#b2312f;">
    <% for (let i = 0; i < tipos.length; i++) {%>
        <%- (item && (item.idtipo === tipos[i].id))? tipos[i].nome : '' %>
    <%}%>
</span> - <% for (let i = 0; i < semestres.length; i++) {%>
    <%- (item && (item.idsemestre === semestres[i].id))? semestres[i].nome : '' %>
<%}%>
</h5>
<br>

<div class="container">
    <div class="row">
        <% for (let i = 0; i < perguntas.length; i++) {%>
            <div class="colunaCriterio<%= i + 1%> col-md-6 col-12 pb-5 px-1 d-flex flex-column justify-content-between">
                <div>
                    <h5><strong>Critério <%= i + 1%>: <%= perguntas[i].titulo %></strong></h5>
                    <label><strong>Peso: (<%= `${perguntas[i].peso * 100}%` %>)</strong></label>
                </div>

                <div>
                    <%- perguntas[i].criterios %>
                </div>

                <div>
                    <textarea rows="3" style="resize: none; width: 80%;" id="comentarios<%= i + 1%>" name="comentarios<%= i + 1%>"
                        placeholder="Comentários"></textarea> <br>
                    <label for="nota<%= i + 1%>"><strong>Notas de 0 a
                            10,0:</strong></label>
                    <input oninput="atualizar(nota<%= i + 1%>, xf, <%= perguntas[i].peso %>)" type="number" id="nota<%= i + 1%>" name="nota<%= i + 1%>" min="0" max="10" placeholder="0" required><br>

                    Nota com peso: <output id="xf" name="xf" for="nota<%= i + 1%>">0,0</output>
                </div>
            </div>
        <%}%>
    </div>
    <div class="row">
        <h5>
            <label for="notaFinal"><strong>Nota final
                do trabalho avaliado:</strong></label>
            <output name="demo" id="demo" for="notaFinal"><strong>0</strong></output>
        </h5>
    </div>
</div>

    <script>
        function atualizar(inputNota, outputSaida, peso) {
            let nota = parseFloat(inputNota.value.replace(",", "."));

            if (isNaN(nota)) {
                nota = 0;
            }

            nota *= peso;

            outputSaida.value = nota.toFixed(1).replace(".", ",");

            let arrayNotas = []
            <% for (let i = 0; i < perguntas.length; i++) {%>
                let n<%= i + 1%> = parseFloat(nota<%= i + 1%>.value.replace(",", "."));
                    
                if (isNaN(n<%= i + 1%>))
                    n<%= i + 1%> = 0;
            
                n<%= i + 1%> *= <%= perguntas[i].peso %>;

                arrayNotas.push(n<%= i + 1%>)
            <%} %>

            demo.value = arrayNotas.reduce((acc, elem) => acc + elem).toFixed(1).replace(".", ",");
        }

    </script>

    <input name="pgtId" value="<%= item.id %>" class="d-none">

<%- contentFor("scripts") %>
<script>
    "use strict";

    let requiredFields = {
        <% for (let i = 0; i < perguntas.length; i++) {%>
            nota<%= i + 1%>: {
                required: true
            },
        <%} %>
    }

	$("#form").validate({
		rules: requiredFields, 
		submitHandler: function (form) {
			if (JsonWebApi.active)
				return;

			Swal.wait();

			JsonWebApi.postFormData("<%- root %>/api/pgt/avaliar", form, function (response) {
                console.log({response})
				if (response.success) {
					resetForm("#form");
					Swal.success("PGT avaliado com sucesso! " + emoji.happy).then(() => {
						window.location.href = "/pgt/detalhar?id=<%= item.id %>"
					});
				} else {
					Swal.error(response.value + " " + emoji.sad);
				}
			});
		}
	});
</script>